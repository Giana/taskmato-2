@model Taskmato.Models.Task

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="text-center">
            <img class="mb-4 logo-sm" src="~/Images/TaskmatoLogoTransparent.png" alt="Taskmato" />
            <h4>Edit Task</h4>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="row" id="input-row">
                <div class="col-md mx-3 rounded grey">
                    <div class="row">
                        <div class="col form-group text-center">
                            @Html.HiddenFor(model => model.TaskID)

                            <strong>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col" })</strong>
                            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            <br>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col form-group text-center">
                            <strong>@Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col" })</strong>
                            @Html.TextBoxFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                            <br>
                            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col form-group text-center">
                            <strong>@Html.LabelFor(model => model.Pomodoros, htmlAttributes: new { @class = "control-label col" })</strong>
                            @Html.TextBoxFor(model => model.Pomodoros, new { htmlAttributes = new { @class = "form-control" } })
                            <br>
                            @Html.ValidationMessageFor(model => model.Pomodoros, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col form-group text-center">
                            <strong>@Html.LabelFor(model => model.Complete, htmlAttributes: new { @class = "control-label col" })</strong>
                            @Html.EditorFor(model => model.Complete)
                            <br>
                            @Html.ValidationMessageFor(model => model.Complete, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" id="button-row">
                <div class="col-md px-2 pt-3 mx-3 my-3 rounded grey">
                    <div class="row">
                        <div class="col form-group">
                            <div class="container-fluid text-center mt-2">
                                <input type="submit" value="Save" class="btn btn-light btn-lg pl-4 pr-4" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col form-group">
                            <div class="container-fluid text-center my-2">
                                @Html.ActionLink("Cancel", "Index", "Task", null, new { @class = "btn btn-dark btn-lg pl-4 pr-4" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}